on:
  pull_request:
  # push:
  #   branches:
  #     - main
  #     - release
  #     - 'releases/**'
    
  #   paths:
  #     - 'release-info.md'

name: Release

defaults:
  run:
    working-directory: ./frontend


env:
  API_KEY: ${{secrets.API_KEY}}
  API_URL: https://inspection.mbg-solutions.com/api/secure #edit this if necessary

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: Mastbau-FN/inspector/.github/actions/setup@061__release #TODO:change default branch
      - run: ls #TODO: remove
      - name: run tests and report coverage
        run: flutter test --coverage
      - name: comment coverage
        if: github.event.pull_request
        uses: romeovs/lcov-reporter-action@v0.2.16 
        with:
          github-token: ${{secrets.TOKEN_GITHUB}}

  build-doc:
    needs: test
    name: Build Docs
    runs-on: ubuntu-latest
    env:
      API_KEY: ${{ secrets.API_KEY}}
      API_URL: https://inspection.mbg-solutions.com/api/secure #edit this if necessary

    steps:
      - uses: actions/checkout@v2
      - uses: Mastbau-FN/inspector/.github/actions/setup@061__release #TODO:change default branch
      - name: Build Documentation
        run: |
          flutter pub global activate dartdoc
          flutter pub global run dartdoc

      - name: upload doc artifact
        uses: actions/upload-artifact@v2
        with:
          name: doc
          path: doc/api

  build-app:
    needs: test
    name: Build Web + Android (apk+aab)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [web, apk, aab]
    env:
      API_KEY: ${{ secrets.API_KEY}}
      API_URL: https://inspection.mbg-solutions.com/api/secure #edit this if necessary

    steps:
      - uses: actions/checkout@v2
      - uses: Mastbau-FN/inspector/.github/actions/setup@061__release #TODO:change default branch
      - name: Build
        run: flutter build ${{matrix.platform}}

      - name: upload web artifact
        uses: actions/upload-artifact@v2
        with:
          name: web
          path: build/web
      - name: upload apk artifact
        uses: actions/upload-artifact@v2
        with:
          name: inspector.apk
          path: build/app/outputs/flutter-apk/app-release.apk
      - name: upload aab artifact
        uses: actions/upload-artifact@v2
        with:
          name: inspector.aab
          path: /build/app/outputs/bundle/release/app.aab

  deploy-web:
    needs: [build-doc,build-app]
    name: Deploy Web-App and Docs
    runs-on: ubuntu-latest
    steps:

      - name: download web artifact
        uses: actions/download-artifact@v2
        with:
          name: web

      - name: download doc artifact
        uses: actions/download-artifact@v2
        with:
          name: doc

      - name: make gh-pages folder for doc as well as the app
        run: |
          mkdir gh-pages
          mv doc gh-pages/doc
          mv web gh-pages/app
          cd gh-pages && touch .nojekyll 
        # the last command is needed to serve the .env

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: frontend/gh-pages

  release-GH:
    needs: build-app
    name: Release to GH
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Read release notes
        id: release-info
        uses: juliangruber/read-file-action@v1
        with:
          path: ./release-info.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release_v_${{ github.run_number }}
          release_name: AutoRelease (v${{ github.run_number }})
          body: ${{ steps.release-info.outputs.content }}
          draft: false
          prerelease: false
      - name: download apk
        uses: actions/download-artifact@v2
        with:
          name: inspector.apk
      - name: upload apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: inspector.apk
          asset_name: inspector.apk
          asset_content_type: application/octet-stream

  release-Playstore:
    needs: build-app
    name: Release to the google playstore
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Read release notes
        id: release-info
        uses: juliangruber/read-file-action@v1
        with:
          path: ./release-info.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release_v_${{ github.run_number }}
          release_name: AutoRelease (v${{ github.run_number }})
          body: ${{ steps.release-info.outputs.content }}
          draft: false
          prerelease: false
      - name: download apk
        uses: actions/download-artifact@v2
        with:
          name: inspector.apk
      - name: upload apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: inspector.apk
          asset_name: inspector.apk
          asset_content_type: application/octet-stream
